#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Sun Nov  8 19:57:08 2015
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 1  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
#expect -exact "\[?1034hbash-4.2\$ "
send -- "python slq	"
expect -exact "uotecli.py "
send -- "\r"
expect -exact "  1. Show all SoftLayer_product_Package(s)\r"
send -- "0\r"
expect "You chose \"0\"\r*
List of valid datacenter's currently cached:\r*
*'id': 352494, 'longName': 'Hong Kong 2', 'name': 'hkg02'*
Specify datacenter id:\r"
send -- "352494\r"
expect "352494\r*
You chose \"352494\"\r*
  0. Specify target datacenter id\r
  1. Show all SoftLayer_product_Package(s)\r
  2. List SoftLayer_Product_Package *required* options for a given package (use 'id' from menu option 1)\r
  3. List SoftLayer_Product_Package *all* options for a given package (use 'id' from menu option 1)\r
  4. Create product container\r
  5. Select a product container for editing\r
  6. List existing product container(s)\r
  7. Unload product container - make sure you save it first\r
  8. Set container deployment location (use id from menu option 0 / 19)\r
  9. Set container package id (use id from menu option 1)\r
  10. Set container price ids (use column 1 from menu option 2 / 3)\r
  11. Set the container quantity value (number of servers of this container type)\r
  12. Show the in progress quote containers\r
  13. Verify a quote (uses all loaded product containers)\r
  14. Place a quote (uses all loaded product containers)\r
  15. Export Product containers to disk (JSON)\r
  16. Import Product containers (*.json) in current dir\r
  17. Download Quote Pdf for an existing portal quote id\r
  18. Show all quotes in account\r
  19. List Location_DataCenter (DC locations)\r
  20. Show currently selected datacenter\r
  21. Troubleshooting options menu\r
  22. Exit to shell - make sure you save things you want before leaving\r
> "
send -- "1\r"
expect "1\r
You chose \"1\"\r*
*'id': 251, 'name': 'Dual E5-2600 v3 Series (12 Drives)'},\r*
> "
send -- "2\r"
expect -exact "2\r
You chose \"2\"\r
Enter the SoftLayer_Product_Package id:\r
> "
send -- "251\r"
expect "251\r*
47061  Server                                     1   Dual Intel Xeon E5-2690 v3 (12 Cores, 2.60 GHz)                \r*
142145 Operating System                           12  Debian GNU/Linux 8.x jessie/Stable (64 bit)                    \r*
49425  RAM                                        3   64 GB RAM                                                      \r*
876    Disk Controller                            11  Non-RAID                                                       \r*
49809  First Hard Drive                           4   1.00 TB SATA                                                   \r*
50231  Public Bandwidth                           10  1000 GB Bandwidth                                              \r*
273    Uplink Port Speeds                         26  100 Mbps Public & Private Network Uplinks                      \r*
906    Remote Management                          46  Reboot / KVM over IP                                           \r*
21     Primary IP Addresses                       13  1 IP Address                                                   \r*
418    Vulnerability Assessments & Management     32  Nessus Vulnerability Assessment & Reporting                    \r*
55     Monitoring                                 20  Host Ping                                                      \r*
57     Notification                               21  Email and Ticket                                               \r*
58     Response                                   22  Automated Notification                                         \r*
420    VPN Management - Private Network           31  Unlimited SSL VPN Users & 1 PPTP VPN User per account          \r*
> "
send -- "4\r"
expect "4\r*
You chose \"4\"\r*
Quotes (and fwiw orders) are composed of one or more containers\r*
> "
send -- "expect\r"
expect "expect\r
You typed \"expect\"\r*
Enter the container name you wish to edit:\r
\r
> "
send -- "container-expect\r"
expect "container-expect\r
You typed \"container-expect\"\r*"
send -- "8\r"
expect "8\r*
You chose \"8\"\r
\r
The currently selected product container is:\r
\r
container-expect\r*
Enter the datacenter id you would like to specify for the selected container:\r
\r
> "
send -- "352494"
expect "352494"
send -- "\r"
expect "You typed \"352494\"\r
The currently selected*
> "
send -- "9\r"
expect "9\r
You chose \"9\"\r
\r
The currently selected product container is:\r
\r
container-expect\r
\r
\r
The currently selected & in progress quote container looks like:\r*
> "
send -- "251\r"
expect "251\r
You typed \"251\"\r
The currently selected & in progress quote container looks like:\r*
> "
send -- "10\r"
expect "10\r*
The currently selected product container is:\r*
The currently selected & in progress quote container looks like:\r*
> "
send -- "47061,142145,49425,876,49809,50231,273,906,21,418,55,57,58,420"
expect -exact "47061,142145,49425,876,49809,50231,273,906,21,418,55,57,58,420"
send -- "\r"
expect "\r*
The currently selected & in progress quote container looks like:\r*
> "
send -- "13\r"
expect "Quote SUCCESSFULLY VERIFIED - you can safely place a quote using these settings\r*
> "
send -- "14\r"
expect "14\r
You chose \"14\"\r*
Quote SUCCESSFULLY PLACED - you can see the quote on control.softlayer.com\r
Or download the pdf from the menu\r*
> "
send -- "22\r"
expect "22\r"
expect eof
